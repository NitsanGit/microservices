apiVersion: apps/v1
kind: Deployment
metadata:
  name: electricitybill  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: electricitybill
  template:
    metadata:
      labels:
        app: electricitybill
    spec:
      containers:
      - name: electricitybill
        image: assutaacrdemo.azurecr.io/electricitybill:v1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: electricitybillsvc 
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: electricitybill
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mobilebill  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mobilebill
  template:
    metadata:
      labels:
        app: mobilebill
    spec:
      containers:
      - name: mobilebill
        image: assutaacrdemo.azurecr.io/mobilebill:v1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mobilebillsvc 
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: mobilebill
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loyaltypoints  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loyaltypoints
  template:
    metadata:
      labels:
        app: loyaltypoints
    spec:
      containers:
      - name: loyaltypoints
        image: assutaacrdemo.azurecr.io/loyaltypoints:v1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: loyaltypointssvc 
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: loyaltypoints
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthstats  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: healthstats
  template:
    metadata:
      labels:
        app: healthstats
    spec:
      containers:
      - name: healthstats
        image: assutaacrdemo.azurecr.io/healthstats:v1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: healthstatssvc 
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: healthstats
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aks-helloworld-one  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aks-helloworld-one
  template:
    metadata:
      labels:
        app: aks-helloworld-one
    spec:
      containers:
      - name: aks-helloworld-one
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
        ports:
        - containerPort: 80
        env:
        - name: TITLE
          value: "Welcome to Azure Kubernetes Service (AKS)"
---
apiVersion: v1
kind: Service
metadata:
  name: aks-helloworld-one  
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: aks-helloworld-one
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aks-workshop-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /electricitybill(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: electricitybillsvc
            port:
              number: 80

      - path: /mobilebill(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: mobilebillsvc
            port:
              number: 80
      
      - path: /loyalty(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: loyaltypointssvc
            port:
              number: 80

     
      - path: /healthstats(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: healthstatssvc
            port:
              number: 80

      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: aks-helloworld-one
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aks-workshop-ingress-static
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /static/$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /static(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: aks-helloworld-one
            port: 
              number: 80
